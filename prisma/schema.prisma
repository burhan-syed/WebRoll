// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "filteredRelationCount"]
}

enum SiteStatus {
  REVIEW
  APPROVED
  QUARANTINE
  BANNED
}

model Site {
  id          String       @id @unique @map("id") @db.VarChar(21)
  name        String
  url         String       @unique
  sourceLink  String?      @map("source_link")
  views       Int          @default(0)
  dislikes    Int          @default(0)
  reports     Int          @default(0)
  description String?      @db.Text
  allowEmbed  Boolean      @default(true) @map("allow_embed")
  privacy     Boolean      @default(false)
  adult       Boolean      @default(false)
  status      SiteStatus   @default(REVIEW)
  submitterIP String       @map("submitter_ip") @db.VarChar(45)
  submittedAt DateTime     @default(now()) @map("submitted_at")
  imgKey      String?      @map("img_key")
  tags        Tags[]
  categories  Categories[]
  likes       Likes[]
  Reports     Reports[]
}

model Likes {
  id        Int      @id @unique @default(autoincrement())
  siteId    String   @map("site_id") @db.VarChar(21)
  ip        String   @db.VarChar(45)
  sessionId String   @db.VarChar(25)
  date      DateTime @default(now())
  direction Boolean  @default(true)

  site Site @relation(fields: [siteId], references: [id])

  @@unique([siteId, ip])
}

model Reports {
  id     Int      @id @unique @default(autoincrement())
  siteId String   @map("site_id") @db.VarChar(21)
  ip     String   @db.VarChar(45)
  date   DateTime @default(now())

  site Site @relation(fields: [siteId], references: [id])

  @@unique([siteId, ip])
}

model Tags {
  id  Int    @id @unique @default(autoincrement()) @map("id")
  tag String @unique @db.VarChar(48)

  createdAt DateTime @default(now()) @map("created_at")

  sites Site[]
}

model Categories {
  id        Int      @id @unique @default(autoincrement()) @map("id")
  category  String   @unique @db.VarChar(24)
  createdAt DateTime @default(now()) @map("created_at")

  description String?
  sites       Site[]
}

model Sessions {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  expiresAt DateTime @default(now()) @map("expires_at")
  ip        String   @db.VarChar(45)
}
