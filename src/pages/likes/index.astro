---
import MainLayout from "../../layouts/MainLayout.astro";
import SmallSiteCard from "../../components/ui/SmallSiteCard";
import Refresh from "../../components/ui/buttons/Refresh";
import Paginator from "../../components/ui/buttons/Paginator";
import { checkAndReturnSessionID } from "../../server/utils/handleSession";
import prisma from "../../server/utils/prisma";
const { session, prev_session } = await checkAndReturnSessionID(Astro);
console.log("cookie set?", session, prev_session);
Astro.response.headers.set(
  "Set-Cookie",
  `webroll_session=${session}.${prev_session}; Secure; HttpOnly;`
);
const { page } = Astro.params;
const NPage = +(page ?? 1);
const totalLikes = await prisma.likes.count({
  where: { sessionId: session, direction: true },
});

const likesPerPage = 10;
const likes = await prisma.likes.findMany({
  where: { sessionId: session, direction: true },
  select: {
    site: {
      select: {
        id: true,
        imgKey: true,
        url: true,
        name: true,
        description: true,
        allowEmbed: true,
        status: true,
        categories: { select: { category: true } },
      },
    },
  },
  orderBy: { date: "desc" },
  take: likesPerPage,
  skip: (NPage - 1) * likesPerPage,
});
const totalPages = Math.ceil(totalLikes / likesPerPage);
const pages = Array.from(Array(totalPages), (e, i) => {
  const pNum = i + 1;
  return (totalPages <= 7 ? pNum : NPage < 5 && pNum < 6) ||
    (totalPages - pNum < 5 && totalPages - NPage < 4)
    ? pNum
    : Math.abs(NPage - pNum) < 2
    ? pNum
    : pNum === 1 || pNum === totalPages
    ? pNum
    : -100;
}).filter((pNum, i) =>
  pNum > 0
    ? true
    : pNum === 1 || pNum === totalPages
    ? true
    : totalPages - i === 2 || i === 1
    ? true
    : false
);
---

<MainLayout
  skipCookies={true}
  noProse={true}
  noFooter={true}
  pageTitle={"Likes | WebRoll"}
>
  <div
    class="flex flex-col flex-grow bg-neutral items-center"
    style={{
      backgroundImage: `radial-gradient(circle, hsl(var(--sc)) 1px, rgba(0, 0, 0, 0) 1px)`,
      backgroundSize: `5px 5px`,
    }}
  >
    <div
      class="flex flex-col flex-grow gap-2 min-w-full sm:min-w-fit sm:w-full sm:max-w-xl md:max-w-2xl lg:max-w-4xl mx-2 p-4"
    >
      <div
        class="flex flex-col p-4 flex-grow bg-base-100/90 backdrop-blur-md border-base-300 rounded-lg"
      >
        <h1 class="text-3xl mb-6 flex items-center justify-between gap-2">
          Likes<Refresh
            styles={"btn btn-ghost rounded-full group"}
            size={20}
            client:load
          />
        </h1>
        {
          !(likes.length > 0) ? (
            <span>no likes found</span>
          ) : (
            <>
              <ul class="flex flex-col gap-2">
                {likes.map(({ site }) => (
                  <li>
                    <a href={`/sites/${site.id}`}>
                      <SmallSiteCard site={site} />
                    </a>
                  </li>
                ))}
              </ul>
            </>
          )
        }
      </div>
      {
        pages.length > 1 && (
          <div class="flex flex-col py-2 px-4 bg-base-100/90 backdrop-blur-md border-base-300 rounded-lg">
            <div class="btn-group mt-auto  mx-auto">
              <Paginator currentPage={NPage} pages={pages} route={"/likes/"} />
            </div>
          </div>
        )
      }
    </div>
  </div>
</MainLayout>
