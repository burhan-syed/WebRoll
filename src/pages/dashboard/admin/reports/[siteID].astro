---
import { getUser } from "@astro-auth/core";
import UpdateSite from "../../../../components/admin/UpdateSite";
import UpdateSiteModal from "../../../../components/admin/UpdateSiteModal";
import ResolveReports from "../../../../components/admin/QuickButtons/ResolveReports";
import ResolveAReport from "../../../../components/admin/QuickButtons/ResolveAReport";

import ApplyReport from "../../../../components/admin/QuickButtons/ApplyReport";

import MainLayout from "../../../../layouts/MainLayout.astro";
import prisma from "../../../../server/utils/prisma";
import type { User } from "../../../../types";
const user = getUser({ client: Astro }) as User;
if (!user || user.role !== "ADMIN") {
  return redirectUser("/signup");
}

const { siteID } = Astro.params as { siteID: string };
const site = await prisma.sites.findFirst({
  where: { id: siteID },
  include: { categories: true, tags: { select: { tag: true } } },
});
const categories = await prisma.categories.findMany();
const reports = await prisma.reports.findMany({
  where: { siteId: siteID, resolved: false },
  orderBy: { type: "asc" },
  include: { categories: true, tags: true },
});
---

<MainLayout
  SEOProps={{ title: "Site Reports | Webroll", noindex: true, nofollow: true }}
  noProse={false}
>
  <div class="bg-base-200 flex flex-col flex-grow">
    {
      site && (
        <div class="max-w-4xl mx-auto p-4 flex flex-col gap-2">
          <h1>
            <a href={`/sites/${site.id}`}>
              {site?.name}({site?.url})
            </a>
          </h1>
          <UpdateSite site={site} client:load />
          <div class="w-full">
            <ResolveReports siteID={site.id} client:load />
          </div>

          <span>
            Categories: <>{site.categories.map((c) => c.category).join(",")}</>
          </span>
          <span>
            Tags: <>{site.tags.map((t) => t.tag.tag).join(",")}</>
          </span>
          <span>Reports: ({reports.length})</span>
          <li class="flex flex-col gap-2">
            {reports.map((r) => (
              <ul class="bg-base-200 rounded-md p-4">
                {r.id}:{r.type}
                <>
                  {r.type === "TAGS" ? (
                    <>tags:{r.tags.map((t) => t.tag)?.join(",")}</>
                  ) : (
                    r.type === "CATEGORY" && (
                      <>catgs:{r.categories.map((c) => c.category).join(",")}</>
                    )
                  )}
                </>
                <div class="flex flex-col gap-0.5">
                  {r.type === "CATEGORY" ||
                  (r.type === "TAGS" && (
                    <ApplyReport reportID={r.id} client:load />
                  ))}
                <ResolveAReport reportID={r.id} client:load />
                  </div>
            
              </ul>
            ))}
          </li>
        </div>
      )
    }
  </div>

  {site && <UpdateSiteModal client:load site={site} categories={categories} />}
</MainLayout>
