---
// Component Imports
//import { getImage } from "@astrojs/image";
import ExplorePage from "../components/ExplorePage";
import NavBar from "../components/ui/NavBar.astro";
import { getSignedImageUrl } from "../server/aws/bucket";
import { checkAndReturnSessionID } from "../server/utils/handleSession";
import prisma from "../server/utils/prisma";
const userIp = Astro.clientAddress;
const cookie = Astro.request.headers.get("cookie");
const { session, prev_session } = await checkAndReturnSessionID(Astro);
Astro.response.headers.set(
  "Set-Cookie",
  `webroll_session=${session}.${prev_session}; Secure; HttpOnly;`
);
const allSitesCount = await prisma.sites.count({
  where: { status: "APPROVED" },
});
const sites = await prisma.sites.findMany({
  where: { status: "APPROVED" },
  take: 3,
  skip: Math.floor(Math.random() * allSitesCount),
  select: {
    id: true,
    imgKey: true,
    url: true,
    name: true,
    description: true,
    allowEmbed: true,
    status: true,
    categories: { select: { category: true } },
    likes: { where: { sessionId: session } },
  },
});
let siteImgURL = "";
if (sites?.[0]?.allowEmbed !== true && sites?.[0]?.imgKey) {
  siteImgURL = await getSignedImageUrl(sites?.[0]?.imgKey as string);
  // const { src } = await getImage({
  //   format: "webp",
  //   quality: 80,
  //   width: 1080,
  //   height: 1920,
  //   src: siteImgURL,
  //   fit: "outside",
  // });
  // if (src) siteImgURL = src;
}
// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Explore | WebRoll</title>
  </head>

  <div class="drawer drawer-end">
    <input id="my-drawer-4" type="checkbox" class="drawer-toggle" />
    <div class="drawer-content">
      <main class="min-h-screen min-w-full flex flex-col">
        {
          sites.length > 0 ? (
            <ExplorePage
              initialSiteImgURL={siteImgURL}
              initialSites={sites}
              ip={userIp}
              client:load
            />
          ) : (
            <>
              <NavBar />
              <div class="bg-base-200 flex-grow flex flex-col items-center justify-center gap-4">
                <span>{`No sites Found :(`}</span>
                <a href="/submit" class="btn btn-primary">
                  Submit a Site
                </a>
              </div>
            </>
          )
        }
      </main>
    </div>
    <div class="drawer-side">
      <label for="my-drawer-4" class="drawer-overlay"></label>
      <ul class="menu flex-col-reverse md:flex-col  p-4 overflow-y-auto w-80 bg-base-100 text-base-content">
        <!-- Sidebar content here -->
        <li><a rel="prefetch" href="/submit">Submit a Site</a></li>
        <li><a href="/likes">Likes</a></li>
        <li><a href="/dashboard">Account</a></li>
      </ul>
    </div>
  </div>
</html>
